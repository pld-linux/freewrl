--- FreeWRL-1.00/Plugin/mozilla/Makefile.orig	2003-08-10 14:41:33.000000000 +0200
+++ FreeWRL-1.00/Plugin/mozilla/Makefile	2003-08-11 20:36:01.638817672 +0200
@@ -18,13 +18,13 @@

 ifndef ${MOZILLA_INST}

-MOZILLA_INST:=/usr/lib/mozilla-1.0.0
+MOZILLA_INST:=/usr/lib/mozilla

 endif

 ifndef ${MOZILLA_INC}

-MOZILLA_INC:=/usr/include/mozilla-1.0.0
+MOZILLA_INC:=/usr/include/mozilla

 endif
 
@@ -118,6 +118,7 @@

 INC:=\
      -Iinclude\
+     -I/usr/include/nspr\
      -I${PLUGIN_GLUE_DIR}/CFuncs\
      -I${MOZILLA_INC}/plugin\
      -I${MOZILLA_INC}/xpcom\
@@ -132,11 +131,8 @@
 
 INC+=\
      -I/usr/X11R6/include\
-     -I/usr/include\
-     -I/usr/include/gtk-1.2\
-     -I/usr/include/glib-1.2\
-     -I/usr/lib/glib/include\
-     -include include/config-rhlinux72-i686.h ## for platform defines
+     `$(GTK_CONFIG) --cflags` \
+     -include /usr/include/mozilla/mozilla-config.h ## for platform defines
 
 endif
 
@@ -151,7 +152,6 @@
         ${OPTIMIZER}\
         ${INC}\
         -pedantic\
-        -fshort-wchar\
         -fno-exceptions\
         -pthread\
         -pipe\
@@ -214,13 +210,10 @@
       -L/usr/X11R6/lib\
       -lgtkxtbin\
       -lXt\
-      -lgtk\
-      -lgdk\
       -lXi\
       -lXext\
       -lX11\
-      -lglib
-
+	`$(GTK_CONFIG) --libs`
 endif
 
 ## -lgtkembedmoz\
--- FreeWRL-1.00/Plugin/mozilla/source/npFreeWRLInstance.cpp.orig	2003-08-10 14:41:33.000000000 +0200
+++ FreeWRL-1.00/Plugin/mozilla/source/npFreeWRLInstance.cpp	2003-08-11 20:33:17.972698704 +0200
@@ -195,29 +195,29 @@
     // add MacOS code later
 
     // handle signals...
-    if (signal(SIGIO, (__sighandler_t) &npFreeWRLInstance::signalHandler) == SIG_ERR) {
+    if (signal(SIGIO, (__sighandler_t) &npFreeWRLInstance_signalHandler) == SIG_ERR) {
         std::cerr << "signal with SIGIO failed." << endl;
         return FALSE;
     }
 
-    if (signal(SIGPIPE, (__sighandler_t) &npFreeWRLInstance::signalHandler) == SIG_ERR) {
+    if (signal(SIGPIPE, (__sighandler_t) &npFreeWRLInstance_signalHandler) == SIG_ERR) {
         std::cerr << "signal with SIGPIPE failed." << endl;
         return FALSE;
     }
 
 #if _DEBUG
-    if (signal(SIGBUS, (__sighandler_t) &npFreeWRLInstance::signalHandler) == SIG_ERR) {
+    if (signal(SIGBUS, (__sighandler_t) &npFreeWRLInstance_signalHandler) == SIG_ERR) {
         std::cerr << "signal with SIGPIPE failed." << endl;
         return FALSE;
     }
 #endif // _DEBUG
 
-    if (signal(SIGHUP, (__sighandler_t) &npFreeWRLInstance::signalHandler) == SIG_ERR) {
+    if (signal(SIGHUP, (__sighandler_t) &npFreeWRLInstance_signalHandler) == SIG_ERR) {
         std::cerr << "signal with SIGHUP failed." << endl;
         return FALSE;
     }
 
-    if (signal(SIGUSR2, (__sighandler_t) &npFreeWRLInstance::signalHandler) == SIG_ERR) {
+    if (signal(SIGUSR2, (__sighandler_t) &npFreeWRLInstance_signalHandler) == SIG_ERR) {
         std::cerr << "signal with SIGUSR2 failed." << endl;
         return FALSE;
     }
@@ -839,7 +839,7 @@
 }
 
 void
-npFreeWRLInstance::signalHandler(int signo)
+npFreeWRLInstance_signalHandler(int signo)
 {
 #if _DEBUG
     std::cerr << "npFreeWRLInstance signalHandler signal number = "
@@ -851,7 +851,7 @@
 #if _DEBUG
             std::cerr << "\tplugin caught SIGIO!" << endl;
 #endif // _DEBUG
-            if (receiveUrl(socketDesc, &lastRequest) != NPERR_NO_ERROR) {
+/*          if (receiveUrl(socketDesc, &lastRequest) != NPERR_NO_ERROR) {
                 std::cerr << "receiveUrl returned with error!" << endl;
             } else {
                 if (NPN_GetURL((NPP) lastRequest.instance,
@@ -859,7 +859,7 @@
                                NULL) != NO_ERROR) {
                     fprintf(stderr, "NPN_GetURL failed.\n");
                 }
-            }
+            }  -- socketDesc and lastRequest inaccessible here */
             break;
 #if _DEBUG
         case SIGBUS:
--- FreeWRL-1.00/Plugin/mozilla/include/npFreeWRLInstance.h.orig	2003-07-24 15:59:15.000000000 +0200
+++ FreeWRL-1.00/Plugin/mozilla/include/npFreeWRLInstance.h	2003-08-10 16:12:44.000000000 +0200
@@ -66,6 +66,7 @@
 
 // from mozilla plugin sdk and samples - plugin.h
 
+void npFreeWRLInstance_signalHandler(int signo);
 class npFreeWRLInstance : public npInstanceBase
 {
 public:
@@ -130,7 +131,6 @@
 	void getVersion(char **aVersion);
 	void showVersion();
 	void clear();
-    void signalHandler(int signo);
     PlatformInfo * getPlatformInfo();
 
 private:
